---
# Source: spring-boot/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-spring-boot
  labels:
    helm.sh/chart: spring-boot-0.1.0
    app.kubernetes.io/name: spring-boot
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: spring-boot/templates/propertiesConfigMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-spring-boot-application-properties
data:
  application-local.yaml: |
    logging:
      level:
        ROOT: debug
  application-profile1.yaml: |
    server:
      port: 123
  application-profileName.yaml: |
    your.spring.property: value
---
# Source: spring-boot/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: example-spring-boot
  labels:
    helm.sh/chart: spring-boot-0.1.0
    app.kubernetes.io/name: spring-boot
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: spring-boot
    app.kubernetes.io/instance: example
---
# Source: spring-boot/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-spring-boot
  labels:
    helm.sh/chart: spring-boot-0.1.0
    app.kubernetes.io/name: spring-boot
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spring-boot
      app.kubernetes.io/instance: example
  template:
    metadata:
      labels:
        helm.sh/chart: spring-boot-0.1.0
        app.kubernetes.io/name: spring-boot
        app.kubernetes.io/instance: example
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: example-spring-boot
      securityContext:
        {}
      containers:
        - name: spring-boot
          securityContext:
            {}
          image: ":1.16.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: local, profile1, profileName
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - name: helm-config
              mountPath: /app/config/helm-config
      volumes:
        - name: helm-config
          configMap:
            name: example-spring-boot-application-properties
---
# Source: spring-boot/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "example-spring-boot-test-connection"
  labels:
    helm.sh/chart: spring-boot-0.1.0
    app.kubernetes.io/name: spring-boot
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['example-spring-boot:80']
  restartPolicy: Never
